#include<stdio.h>
#include <stdlib.h>

int main()
{
    char a[100],b,c;
    scanf("%s",&a);
    scanf("\n%c %c",&b,&c);
    int d=strlen(a), f=0, e=0;
    for(int i=0; i<strlen(a); i++)
    {
        if(a[i]==b || a[i]==c)
        {
            if(f==1 && e!=0)
            {
                if(e<d)
                {
                    d=e;
                    e=0;
                }
            }
            else
            {
                f=1;
            }
            
        }
        if(f==1)
        {
            e++;
        }
    }
    printf("%d.",d-1);
}


Question:


Given a string S and two alphabets C1 and C2 present in S, find the minimum distance D between C1 and C2 in S.

Input Format:
The first line will contain S.
The second line will contain C1 and C2 separated by a space.

Output Format:
The first line will contain D.

Boundary Conditions:
2 <= Length of S <= 100

Example Input/Output 1:

Input:
spaceship
c s

Output:
1
